name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './apps/desktop/src-tauri -> target'
    
    - name: Install dependencies (Ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libasound2-dev
    
    - name: Install frontend dependencies
      run: |
        pnpm install
    
    - name: Run frontend linting
      run: |
        pnpm lint
    
    - name: Run frontend tests
      run: |
        pnpm test
    
    - name: Build frontend
      run: |
        pnpm --filter desktop build
    
    - name: Rust format check
      run: |
        cd apps/desktop/src-tauri
        cargo fmt --all -- --check
    
    - name: Rust clippy
      run: |
        cd apps/desktop/src-tauri
        cargo clippy -- -D warnings
    
    - name: Run Rust tests
      run: |
        cd apps/desktop/src-tauri
        cargo test
    
    - name: Run Rust security audit
      run: |
        cd apps/desktop/src-tauri
        cargo audit
    
    - name: Build Tauri app (Debug)
      if: matrix.platform != 'macos-latest'
      run: |
        cd apps/desktop
        pnpm tauri build --debug
    
    - name: Build Tauri app (macOS - Release)
      if: matrix.platform == 'macos-latest'
      run: |
        cd apps/desktop
        pnpm tauri build
      env:
        APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
        APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
        APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Run npm audit
      run: pnpm audit
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Run Rust security audit
      run: |
        cd apps/desktop/src-tauri
        cargo install cargo-audit
        cargo audit
    
    - name: Run Rust license check
      run: |
        cd apps/desktop/src-tauri
        cargo install cargo-deny
        cargo deny check licenses

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies (Ubuntu)
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
    
    - name: Install frontend dependencies
      run: pnpm install
    
    - name: Run tests with coverage
      run: pnpm test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage
        fail_ci_if_error: true